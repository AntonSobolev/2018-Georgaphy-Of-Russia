if (!require("pacman")) install.packages("pacman")
p_load(rvest) # Packages for scraping
p_load(data.table, ggplot2, maptools, sp) # Packages for text mining
# Your shape file has some topology errors meaning it can't be used by 'over()'
# Use open source shapefiles from www.naturalearth.com - v. good quality
oldwd <- getwd(); tmp <- tempdir(); setwd(tmp)
url <- "http://www.naturalearthdata.com/http//www.naturalearthdata.com/download/10m/cultural/ne_10m_admin_1_states_provinces_shp.zip"
dest <- paste(tmp,"\\tmp.zip",sep="")
download.file(url, dest )
if (!require("pacman")) install.packages("pacman")
p_load(rvest) # Packages for scraping
p_load(data.table, ggplot2, maptools, sp) # Packages for text mining
p_load("devtools")
devtools::install_github("akondrashov96/rusmaps")
rusmaps.dataframe
p_load(rusmaps)
rusmaps.dataframe
rus_sub
rus_sub
plot(rus_sub)
str(rus_sub)
rus_sub@data
rus_sub@polygons
plot(rus_sub)
str(rus_sub)
plot(rus_sub)
str(rus_sub)
rus_sub@polygons
plot(rus_sub)
plot(Kazan)
p_load(tmap)
data(Europe)
tm_shape(Europe) + tm_borders
tm_shape(Europe) + tm_borders()
if (!require("pacman")) install.packages("pacman")
p_load(rvest) # Packages for scraping
p_load(data.table, ggplot2, maptools, sp) # Packages for text mining
p_load("devtools")
devtools::install_github("akondrashov96/rusmaps")
p_load(rusmaps)
#devtools::install_github("akondrashov96/rusmaps")
p_load(rusmaps)
rusmaps.dataframe
summary(rus_sub_nc, max.level = 2)
p_load(data.table, ggplot2, maptools, sp, tmmap) # Packages for text mining
p_load(data.table, ggplot2, maptools, sp, tmap) # Packages for text mining
p_load(data.table, ggplot2, maptools, sp, tmap) # Packages for text mining
data(Russia)
data(land)
data(metro)
tm_shape(rus_sub_nc) +
tm_polygons("pop_2016")
tm_shape(rus_sub_nc) +
tm_polygons()
tm_shape(rus_sub_nc) +
tm_polygons(col="white")
summary(metro)
summary(rus_sub_nc)
proj4string(metro)
proj4string(rus_sub_nc)
metro <- sp::spTransform(metro, proj4string(rus_sub_nc))
summary(metro)
tm_shape(metro) +
tm_raster(col = "pop2010")
tm_shape(metro) +
tm_polygons(col = "pop2010")
tm_shape(metro) +
tm_dots(col = "pop2010")
tm_shape(rus_sub_nc) +
tm_polygons(col="white") +
tm_shape(metro) +
tm_dots(col = "pop2010")
tm_shape(rus_sub_nc) +
tm_polygons(col="white") +
tm_shape(metro) +
tm_dots(col = "pop2010",style="quantile")
hist(value(metro$pop2010))
hist(values(metro$pop2010))
p_load(data.table, ggplot2, maptools, sp, tmap,classInt) # Packages for text mining
hist(values(metro$pop2010))
p_load(data.table, ggplot2, maptools, sp, tmap, classInt) # Packages for text mining
hist(values(metro$pop2010))
hist(metro$pop2010)
quantile(metro$pop2010)
tm_shape(rus_sub_nc) +
tm_polygons(col="white") +
tm_shape(metro) +
tm_dots(col = "pop2010",
style = "fixed",
breaks = c(10000, 100000, 200000, 300000, 400000, 500000, 600000)
)
summary(rus_sub_nc, max.level = 2)
tm_shape(rus_sub_nc) +
tm_polygons(col="pop_2015")
p_load(data.table, ggplot2, maptools, sp, tmap, classInt, ‘geomerge’) # Packages for text mining
p_load(data.table, ggplot2, maptools, sp, tmap, classInt, geomerge) # Packages for text mining
data(land, rivers, metro)
tm_shape(land) +
tm_raster("trees", breaks=seq(0, 100, by=20), legend.show = FALSE) +
tm_shape(Europe, is.master = TRUE) +
tm_borders() +
tm_shape(rivers) +
tm_lines(lwd="strokelwd", scale=5, legend.lwd.show = FALSE) +
tm_shape(metro) +
tm_bubbles("pop2010", "red", border.col = "black", border.lwd=1,
size.lim = c(0, 11e6), sizes.legend = c(1e6, 2e6, 4e6, 6e6, 10e6),
title.size="Metropolitan Population") +
tm_text("name", size="pop2010", scale=1, root=4, size.lowerbound = .6,
bg.color="white", bg.alpha = .75,
auto.placement = 1, legend.size.show = FALSE) +
tm_format_Europe() +
tm_style_natural()
data(land, rivers, metro, Europe)
tm_shape(land) +
tm_raster("trees", breaks=seq(0, 100, by=20), legend.show = FALSE) +
tm_shape(Europe, is.master = TRUE) +
tm_borders() +
tm_shape(rivers) +
tm_lines(lwd="strokelwd", scale=5, legend.lwd.show = FALSE) +
tm_shape(metro) +
tm_bubbles("pop2010", "red", border.col = "black", border.lwd=1,
size.lim = c(0, 11e6), sizes.legend = c(1e6, 2e6, 4e6, 6e6, 10e6),
title.size="Metropolitan Population") +
tm_text("name", size="pop2010", scale=1, root=4, size.lowerbound = .6,
bg.color="white", bg.alpha = .75,
auto.placement = 1, legend.size.show = FALSE) +
tm_format_Europe() +
tm_style_natural()
tm_shape(metro) +
tm_raster("pop2010", breaks=seq(0, 100, by=20), legend.show = FALSE)
tm_shape(rus_sub_nc) +
tm_polygons(col="white") +
tm_shape(metro) +
tm_raster(col = "trees")
tm_shape(rus_sub_nc) +
tm_polygons(col="white") +
tm_shape(land) +
tm_raster(col = "trees")
land@grid
tm_shape(rus_sub_nc) +
tm_polygons(col="pop_2015")
tm_shape(rus_sub_nc) +
tm_polygons(col="pop_2015") +
tm_legend(position = c("right", "bottom"))
tm_shape(rus_sub_nc) +
tm_polygons(col="pop_2015",title = "Russia's Population") +
tm_legend(position = c("right", "bottom"))
tm_shape(rus_sub_nc) +
tm_polygons(col="pop_2015",title = "Russia's Population") +
tm_legend(position = c("right", "bottom"))
knitr::opts_chunk$set(echo = TRUE)
conflict <- rnorm(30)
set.seed(1234)
conflict <- rnorm(30)
democracy <- rnorm(30)
mountains <- conflict + runif(30)
conflict <- rnorm(30,10)
democracy <- rnorm(30,10)
mountains <- conflict + runif(30)
set.seed(1234)
conflict <- rnorm(30,10)
democracy <- rnorm(30,10)
mountains <- conflict + runif(30)
d <- cbind(conflict,democracy, mountains ) %>% data.table()
ggplot(d, aes(y = conflict, x = democracy)) + geom_point(col = 'blue')
ggplot(d, aes(y = conflict, x = democracy)) + geom_point(col = 'blue') +theme_bw()
ggplot(d, aes(y = conflict, x = democracy)) + geom_point(col = 'blue') +theme_bw()
ggplot(d, aes(y = conflict, x = democracy)) + geom_point(col = 'blue') +theme_bw() +
geom_smooth(method="lm", se = F)
ggplot(d, aes(y = conflict, x = mountains)) + geom_point(col = 'red') +theme_bw()
ggplot(d, aes(y = conflict, x = mountains)) + geom_point(col = 'red') +theme_bw() +
geom_smooth(method="lm", se = F)
ggplot(d, aes(y = conflict, x = mountains)) + geom_point(col = 'red') +theme_bw() +
geom_smooth(method="lm", se = F, col = "red")
set.seed(1234)
conflict <- rnorm(30,10)
democracy <- rnorm(30,10)
mountains <- conflict + runif(30,0,3)
d <- cbind(conflict,democracy, mountains ) %>% data.table()
ggplot(d, aes(y = conflict, x = democracy)) + geom_point(col = 'blue') +theme_bw()
ggplot(d, aes(y = conflict, x = democracy)) + geom_point(col = 'blue') +theme_bw() +
geom_smooth(method="lm", se = F)
ggplot(d, aes(y = conflict, x = mountains)) + geom_point(col = 'red') +theme_bw()
ggplot(d, aes(y = conflict, x = mountains)) + geom_point(col = 'red') +theme_bw() +
geom_smooth(method="lm", se = F, col = "red")
ggplot(d, aes(y = conflict, x = democracy)) + geom_point(col = 'blue') +theme_bw() +ylab("Intensity of Civil Conflict")
p1 <- ggplot(d, aes(y = conflict, x = democracy)) + geom_point(col = 'blue') +theme_bw() +ylab("Intensity of Civil Conflict")
p2 <- ggplot(d, aes(y = conflict, x = democracy)) + geom_point(col = 'blue') +theme_bw() +
geom_smooth(method="lm", se = F) +ylab("Intensity of Civil Conflict")
p3 <- ggplot(d, aes(y = conflict, x = mountains)) + geom_point(col = 'red') +theme_bw() +ylab("Intensity of Civil Conflict")
p4 <- ggplot(d, aes(y = conflict, x = mountains)) + geom_point(col = 'red') +theme_bw() +
geom_smooth(method="lm", se = F, col = "red") + ylab("Intensity of Civil Conflict")
ggsave(plot = p1, 'figs/p1.png', width = 14 ,height = 8, units = "cm")
p1 <- ggplot(d, aes(y = conflict, x = democracy)) + geom_point(col = 'blue') +theme_bw() +ylab("Intensity of Civil Conflict")
p2 <- ggplot(d, aes(y = conflict, x = democracy)) + geom_point(col = 'blue') +theme_bw() +
geom_smooth(method="lm", se = F) +ylab("Intensity of Civil Conflict")
p3 <- ggplot(d, aes(y = conflict, x = mountains)) + geom_point(col = 'red') +theme_bw() +ylab("Intensity of Civil Conflict")
p4 <- ggplot(d, aes(y = conflict, x = mountains)) + geom_point(col = 'red') +theme_bw() +
geom_smooth(method="lm", se = F, col = "red") + ylab("Intensity of Civil Conflict")
ggsave(plot = p1, 'p1.png', width = 14 ,height = 8, units = "cm")
ggsave(plot = p2, 'p2.png', width = 14 ,height = 8, units = "cm")
ggsave(plot = p3, 'p3.png', width = 14 ,height = 8, units = "cm")
ggsave(plot = p4, 'p4.png', width = 14 ,height = 8, units = "cm")
if (!require("pacman")) install.packages("pacman")
p_load(rvest) # Packages for scraping
p_load(data.table, ggplot2, maptools, sp, tmap, classInt, geomerge) # Packages for text mining
tm_shape(rus_sub_nc) +
tm_polygons(col="pop_2015",title = "Russia's Population") +
tm_legend(position = c("right", "bottom"))
if (!require("pacman")) install.packages("pacman")
p_load(rvest) # Packages for scraping
p_load(data.table, ggplot2, maptools, sp, tmap, classInt, geomerge) # Packages for text mining
p_load("devtools")
#devtools::install_github("akondrashov96/rusmaps")
p_load(rusmaps)
rusmaps.dataframe
summary(rus_sub_nc, max.level = 2)
data(metro)
metro <- sp::spTransform(metro, proj4string(rus_sub_nc))
summary(metro)
tm_shape(rus_sub_nc) +
tm_polygons(col="pop_2015",title = "Russia's Population") +
tm_legend(position = c("right", "bottom"))
data(land, rivers, metro, Europe)
tm_shape(rus_sub_nc) +
tm_polygons(col="pop_2015",title = "Russia's Population") +
tm_legend(position = c("right", "bottom"))+
tm_shape(land) +
tm_raster(col = "trees")
if (!require("pacman")) install.packages("pacman")
p_load(rvest) # Packages for scraping
p_load(data.table, ggplot2, maptools, sp, tmap, classInt, geomerge) # Packages for text mining
p_load("devtools")
#devtools::install_github("akondrashov96/rusmaps")
p_load(rusmaps)
if (!require("pacman")) install.packages("pacman")
p_load(rvest) # Packages for scraping
p_load(data.table, ggplot2, maptools, sp, tmap, classInt, geomerge) # Packages for text mining
p_load("devtools")
#devtools::install_github("akondrashov96/rusmaps")
p_load(rusmaps)
tm_shape(rus_sub_nc) +
tm_polygons(col="pop_2015",title = "Russia's Population") +
tm_legend(position = c("right", "bottom"))
class(rus_sub_nc)
tm_shape(rus_sub_nc) +
tm_polygons(col="pop_2015",title = "Russia's Population") +
tm_legend(position = c("right", "bottom"))
tm_shape(rus_sub_nc) +
tm_polygons(col="pop_2015",title = "Population") +
tm_legend(position = c("right", "bottom"))
hist(rus_sub_nc$pop_2015)
hist(rus_sub_nc$pop_2015[rus_sub_nc$pop_2015 < 2000000])
tm_shape(rus_sub_nc) +
tm_polygons(col="pop_2015",title = "Population",
style = "fixed",
breaks = c(1000000, 2000000, 3000000)) +
tm_legend(position = c("right", "bottom"))
tm_shape(rus_sub_nc) +
tm_polygons(col="pop_2015",title = "Population",
style = "fixed",
breaks = c(0,1000000, 2000000, 3000000)) +
tm_legend(position = c("right", "bottom"))
tm_shape(rus_sub_nc) +
tm_polygons(col="pop_2015",title = "Population",
style = "fixed",
breaks = c(0,2000000, 3000000)) +
tm_legend(position = c("right", "bottom"))
tm_shape(rus_sub_nc) +
tm_polygons(col="pop_2015",title = "Population",
style = "fixed",
breaks = c(0,2500000, 3000000)) +
tm_legend(position = c("right", "bottom"))
tm_shape(rus_sub_nc) +
tm_polygons(col="pop_2015",title = "Population",
style = "fixed",
breaks = c(0,3000000)) +
tm_legend(position = c("right", "bottom"))
tm_shape(rus_sub_nc) +
tm_polygons(col="pop_2015",title = "Population",
style = "fixed",
breaks = c(0,3000000,4000000)) +
tm_legend(position = c("right", "bottom"))
tm_shape(rus_sub_nc) +
tm_polygons(col="pop_2015",title = "Population",
style = "fixed",
breaks = c(0,2700000,4000000)) +
tm_legend(position = c("right", "bottom"))
rus_sub_nc
rus_sub_nc@data
tm_shape(rus_sub_nc) +
tm_polygons(col="pop_2015",title = "Population",
style = "fixed",
breaks = c(0,2700000,4000000)) +
tm_legend(position = c("right", "bottom"))
hist(rus_sub_nc$pop_2015[rus_sub_nc$pop_2015 <
rus_sub_nc@data$
tm_shape(rus_sub_nc) +
tm_polygons(col="pop_2015",title = "Population",
style = "fixed",
breaks = c(0,1000000,2000000,3000000)) +
tm_legend(position = c("right", "bottom"))
tm_shape(rus_sub_nc) +
tm_shape(rus_sub_nc) +
tm_polygons(col="pop_2015",title = "Population",
style = "fixed",
breaks = c(0,1000000,2000000,3000000)) +
tm_legend(position = c("right", "bottom"))
russia.population.plot <- tm_shape(rus_sub_nc) +
tm_polygons(col="pop_2015",title = "Population",
style = "fixed",
breaks = c(0,1000000,2000000,3000000)) +
tm_legend(position = c("right", "bottom"))
save_tmap(russia.population.plot,"prop_18-24.html")
russia.population.plot <- tm_shape(rus_sub_nc) +
tm_polygons(col="pop_2015",title = "Population",
style = "fixed",
breaks = c(0,3000000)) +
tm_legend(position = c("right", "bottom"))
russia.population.plot
russia.population.plot <- tm_shape(rus_sub_nc) +
tm_polygons(col="pop_2015",title = "Population",
style = "fixed",
breaks = c(0,3000000,6000000)) +
tm_legend(position = c("right", "bottom"))
russia.population.plot
russia.population.plot <- tm_shape(rus_sub_nc) +
tm_polygons(col="pop_2015",title = "Population",
style = "fixed",
breaks = c(0,3000000,5000000)) +
tm_legend(position = c("right", "bottom"))
russia.population.plot
russia.population.plot <- tm_shape(rus_sub_nc) +
tm_polygons(col="pop_2015",title = "Population",
style = "fixed",
breaks = c(0,3000000,5000000)) +
tm_legend(position = c("right", "bottom")) +
tm_text(text = "name", size = 0.2)
russia.population.plot
save_tmap(russia.population.plot,"Population-By-Region-Reduced.html")
russia.population.plot <- tm_shape(rus_sub_nc) +
tm_polygons(col="pop_2015",title = "Population",
style = "fixed",
breaks = c(0,3000000,5000000)) +
tm_legend(position = c("right", "bottom"))#  +
# tm_text(text = "name", size = 0.2)
save_tmap(russia.population.plot,"Population-By-Region-Reduced.html")
rus_sub_nc@data$name
write.table(rus_sub_nc@data$name, "names.csv")
write.table(rus_sub_nc@data$name, "names.csv", quote = F, row.names = F)
write.table(rus_sub_nc@data$name, "names.csv", quote = F, row.names = F, append = F)
write.table(rus_sub_nc@data$name, "names.csv", quote = F, row.names = F, append = F, sep = ",")
ethnic.republics <- c(
"Кабардино-Балкарская Республика",
"Карачаево-Черкесская Республика",
"Республика Адыгея",
"Республика Алтай",
"Республика Башкортостан",
"Республика Бурятия",
"Республика Дагестан",
"Республика Ингушетия",
"Республика Калмыкия",
"Республика Карелия",
"Республика Коми",
"Республика Марий Эл",
"Республика Мордовия",
"Республика Саха (Якутия)",
"Республика Северная Осетия-Алания",
"Республика Татарстан",
"Республика Тыва",
"Республика Хакасия",
"Удмуртская Республика",
"Ханты-Мансийский автономный округ",
"Чеченская Республика",
"Чувашская Республика"
)
rus_sub_nc$ethnic_republic <- "no"
rus_sub_nc$ethnic_republic <- "no"
rus_sub_nc$ethnic_republic[rus_sub_nc$name %in% ethnic.republics] <- "yes"
russia.population.plot <- tm_shape(rus_sub_nc) +
tm_polygons(col="ethnic_republic",title = "Ethnic Status")
russia.population.plot
russia.population.plot <- tm_shape(rus_sub_nc) +
tm_polygons(col="ethnic_republic",title = "Ethnic Republic")
russia.population.plot
russia.population.plot <- tm_shape(rus_sub_nc) +
tm_polygons(col="ethnic_republic",title = "Ethnic Republic") +
tm_legend(position = c("right", "bottom"))
russia.population.plot
russia.population.plot <- tm_shape(rus_sub_nc) +
tm_polygons(col="ethnic_republic",title = "Ethnic Republic") +
tm_legend(position = c("right", "bottom"))
save_tmap(russia.population.plot,"Ethnic-Republics.html")
rus_sub_nc$id
if (!require("pacman")) install.packages("pacman")
p_load(rvest) # Packages for scraping
p_load(data.table, ggplot2, maptools, sp, tmap, classInt, geomerge) # Packages for text mining
p_load("devtools")
#devtools::install_github("akondrashov96/rusmaps")
p_load(rusmaps)
rus_sub_nc$ethnic_republic <- "no"
rus_sub_nc$ethnic_republic[rus_sub_nc$name %in% ethnic.republics] <- "yes"
ethnic.republics <- c(
"Кабардино-Балкарская Республика",
"Карачаево-Черкесская Республика",
"Республика Адыгея",
"Республика Алтай",
"Республика Башкортостан",
"Республика Бурятия",
"Республика Дагестан",
"Республика Ингушетия",
"Республика Калмыкия",
"Республика Карелия",
"Республика Коми",
"Республика Марий Эл",
"Республика Мордовия",
"Республика Саха (Якутия)",
"Республика Северная Осетия-Алания",
"Республика Татарстан",
"Республика Тыва",
"Республика Хакасия",
"Удмуртская Республика",
"Ханты-Мансийский автономный округ",
"Чеченская Республика",
"Чувашская Республика"
)
rus_sub_nc$ethnic_republic <- "no"
rus_sub_nc$ethnic_republic[rus_sub_nc$name %in% ethnic.republics] <- "yes"
rus_sub_nc$id
tm_shape(rus_sub_nc) +
tm_polygons(col="rev(ethnic_republic)",title = "Ethnic Republic") +
tm_legend(position = c("right", "bottom"))
russia.population.plot <- tm_shape(rus_sub_nc) +
tm_fill(col = "ethnic_republic")
russia.population.plot
tm_shape(rus_sub_nc) +
tm_polygons(col="ethnic_republic",title = "Ethnic Republic",palette = 1) +
tm_legend(position = c("right", "bottom"))
tm_shape(rus_sub_nc) +
tm_polygons(col="ethnic_republic",title = "Ethnic Republic",palette = "1") +
tm_legend(position = c("right", "bottom"))
tm_shape(rus_sub_nc) +
tm_polygons(col="ethnic_republic",title = "Ethnic Republic",palette = "Set1") +
tm_legend(position = c("right", "bottom"))
tm_shape(rus_sub_nc) +
tm_polygons(col="ethnic_republic",title = "Ethnic Republic", palette = "Set2") +
tm_legend(position = c("right", "bottom"))
tm_shape(rus_sub_nc) +
tm_polygons(col="ethnic_republic",title = "Ethnic Republic", palette = "Set3") +
tm_legend(position = c("right", "bottom"))
tm_shape(rus_sub_nc) +
tm_polygons(col="ethnic_republic",title = "Ethnic Republic", palette = "Set4") +
tm_legend(position = c("right", "bottom"))
blups <- brewer.pal(2, "BuPu")
p_load(RColorBrewer)
blups <- brewer.pal(2, "BuPu")
p_load(RColorBrewer)
blups <- brewer.pal(3, "BuPu")
tm_shape(rus_sub_nc) +
tm_polygons(col="ethnic_republic",title = "Ethnic Republic", palette = "blups") +
tm_legend(position = c("right", "bottom"))
tm_shape(rus_sub_nc) +
tm_polygons(col="ethnic_republic",title = "Ethnic Republic", palette = blups) +
tm_legend(position = c("right", "bottom"))
?brewer.pal
blups <- brewer.pal(3, "Accent")
tm_shape(rus_sub_nc) +
tm_polygons(col="ethnic_republic",title = "Ethnic Republic", palette = blups) +
tm_legend(position = c("right", "bottom"))
blups <- brewer.pal(3, "Dark2")
tm_shape(rus_sub_nc) +
tm_polygons(col="ethnic_republic",title = "Ethnic Republic", palette = blups) +
tm_legend(position = c("right", "bottom"))
blups <- brewer.pal(3, "Set1")
tm_shape(rus_sub_nc) +
tm_polygons(col="ethnic_republic",title = "Ethnic Republic", palette = blups) +
tm_legend(position = c("right", "bottom"))
tm_shape(rus_sub_nc) +
tm_polygons(col="ethnic_republic",title = "Ethnic Republic", palette = rev(blups)) +
tm_legend(position = c("right", "bottom"))
tm_shape(rus_sub_nc) +
tm_polygons(col="ethnic_republic",title = "Ethnic Republic") +
tm_legend(position = c("right", "bottom"))
if (!require("pacman")) install.packages("pacman")
p_load(rvest) # Packages for scraping
p_load(data.table, ggplot2, maptools, sp, tmap, classInt, geomerge) # Packages for text mining
p_load("devtools")
#devtools::install_github("akondrashov96/rusmaps")
p_load(rusmaps)
